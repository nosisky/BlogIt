{"version":3,"sources":["../../server/controllers/ArticleController.js"],"names":["ArticleController","createArticle","req","res","newArticle","article","save","then","status","send","message","getAllArticles","find","articles","length","getAllComments","articleId","getOneArticle","findOne","slug","params","toObject","id","comment","comments","catch","error","editArticle","findOneAndUpdate","_id","body","$set","updatedArticle","deleteArticle","findOneAndRemove","deletedArticle"],"mappings":"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","file":"ArticleController.js","sourcesContent":["import omit from 'lodash/omit';\n\nimport Article from '../models/Article';\nimport Comment from '../models/Comment';\n\nconst ArticleController = {\n\t/**\n   * @description Creates a new article\n   * \n   * @param {Object} req - request\n   * \n   * @param {Object} res - response\n   * \n   * @return {Object} - returns newly created article\n   */\n\tcreateArticle(req, res) {\n\t\tconst newArticle = new Article(req.article);\n\t\tnewArticle.save().then((article) => {\n\t\t\tres.status(201).send({\n\t\t\t\tarticle,\n\t\t\t\tmessage: 'Article created successfully'\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n   * @description - Fetches all articles in the database\n   * \n   * @param {Object} req - request\n   * \n   * @param {Object} res - response\n   * \n   * @returns {Array} - Array of all articles in the database\n   */\n\tgetAllArticles(req, res) {\n\t\tArticle.find().then((articles) => {\n\t\t\tif (articles.length > 0) {\n\t\t\t\treturn res.status(200).send(articles);\n\t\t\t} else {\n\t\t\t\treturn res.status(404).send({\n\t\t\t\t\tmessage: 'There is no article in the database'\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n   * @description - Fetches all comments in the database\n   * \n   * @param {Object} req - request\n   * \n   * @param {Object} res - response\n   * \n   * @returns {Array} - Array of all articles in the database\n   */\n\tgetAllComments(articleId) {\n\t\treturn Comment.find({ articleId });\n\t},\n\n\t/**\n   * Retrieves a single document \n   * \n   * @param {Object} req - request\n   * \n   * @param {Object} res - response\n   */\n\tgetOneArticle(req, res) {\n\t\tArticle.findOne({\n\t\t\tslug: req.params.slug\n\t\t})\n\t\t\t.then((article) => {\n\t\t\t\tif (article) {\n\t\t\t\t\tconst newArticle = article.toObject();\n\t\t\t\t\tArticleController.getAllComments(req.params.id).then((comment) => {\n\t\t\t\t\t\tif (comment) {\n\t\t\t\t\t\t\tnewArticle.comments = comment;\n\t\t\t\t\t\t\treturn res.status(200).send(newArticle);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn res.status(404).send({\n\t\t\t\t\t\t\t\tmessage: 'Article not found'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((error) => res.status(500).send({ message: 'Invalid article ID supplied' }));\n\t},\n\n\t/**\n   * @description - Edits an article\n   * \n   * @param {Object} req - request\n   * \n   * @param {Object} res - response\n   */\n\teditArticle(req, res) {\n\t\tArticle.findOneAndUpdate({ _id: req.body.articleId }, { $set: req.body })\n\t\t\t.then((updatedArticle) => {\n\t\t\t\treturn res.status(200).send({\n\t\t\t\t\tupdatedArticle,\n\t\t\t\t\tmessage: 'Article updated successfully'\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\treturn res.status(500).send({\n\t\t\t\t\tmessage: 'error occured, article ID is invalid'\n\t\t\t\t});\n\t\t\t});\n\t},\n\n\t/**\n   * @description - Deletes an article\n   * \n   * @param {Object} req - request\n   * \n   * @param {Object} res - response\n   */\n\tdeleteArticle(req, res) {\n\t\tArticle.findOneAndRemove({ _id: req.body.articleId })\n\t\t\t.then((deletedArticle) => {\n\t\t\t\treturn res.status(200).send({\n\t\t\t\t\t_id: deletedArticle._id,\n\t\t\t\t\tmessage: 'Article successfully deleted'\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\treturn res.status(500).send({\n\t\t\t\t\tmessage: 'Error occured, article ID is invalid'\n\t\t\t\t});\n\t\t\t});\n\t}\n};\n\nexport default ArticleController;\n"]}