{"version":3,"sources":["../../server/controllers/CommentController.js"],"names":["CommentControlller","addComment","req","res","newComment","body","userId","decoded","currentUser","_id","save","then","comment","status","send","message","editComment","findOneAndUpdate","commentId","$set","updatedComment","catch","deleteComment","findOneAndRemove","deletedComment","error"],"mappings":";;;;;;AAAA;;;;AAEA;;;;;;AAEA,IAAMA,qBAAqB;AAC1B;;;;;;;;;AASAC,WAV0B,sBAUfC,GAVe,EAUVC,GAVU,EAUL;AACpB,MAAMC,aAAa,sBAAYF,IAAIG,IAAhB,CAAnB;AACAD,aAAWE,MAAX,GAAoBJ,IAAIK,OAAJ,CAAYC,WAAZ,CAAwBC,GAA5C;;AAEAL,aAAWM,IAAX,GAAkBC,IAAlB,CAAuB,UAACC,OAAD,EAAa;AACnCT,OAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACpBF,oBADoB;AAEpBG,aAAS;AAFW,IAArB;AAIA,GALD;AAMA,EApByB;;;AAsB1B;;;;;;;AAOAC,YA7B0B,uBA6Bdd,GA7Bc,EA6BTC,GA7BS,EA6BJ;AACrB,oBAAQc,gBAAR,CAAyB,EAAER,KAAKP,IAAIG,IAAJ,CAASa,SAAhB,EAAzB,EAAsD,EAAEC,MAAMjB,IAAIG,IAAZ,EAAtD,EACEM,IADF,CACO,UAACS,cAAD,EAAoB;AACzB,UAAOjB,IAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC3BM,kCAD2B;AAE3BL,aAAS;AAFkB,IAArB,CAAP;AAIA,GANF,EAOEM,KAPF,CAOQ,YAAM;AACZ,UAAOlB,IAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC3BC,aAAS;AADkB,IAArB,CAAP;AAGA,GAXF;AAYA,EA1CyB;;;AA4C1B;;;;;;;AAOAO,cAnD0B,yBAmDZpB,GAnDY,EAmDPC,GAnDO,EAmDF;AACvB,oBAAQoB,gBAAR,CAAyB,EAAEd,KAAKP,IAAIG,IAAJ,CAASa,SAAhB,EAAzB,EACEP,IADF,CACO,UAACa,cAAD,EAAoB;AACzB,UAAOrB,IAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC3BL,SAAKe,eAAef,GADO;AAE3BM,aAAS;AAFkB,IAArB,CAAP;AAIA,GANF,EAOEM,KAPF,CAOQ,UAACI,KAAD,EAAW;AACjB,UAAOtB,IAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC3BC,aAAS;AADkB,IAArB,CAAP;AAGA,GAXF;AAYA;AAhEyB,CAA3B;;kBAmEef,kB","file":"CommentController.js","sourcesContent":["import omit from 'lodash/omit';\n\nimport Comment from '../models/Comment';\n\nconst CommentControlller = {\n\t/**\n   * @description Adds a new comment\n   * \n   * @param {Object} req - request\n   * \n   * @param {Object} res - response\n   * \n   * @return {Object} - returns newly add comment\n   */\n\taddComment(req, res) {\n\t\tconst newComment = new Comment(req.body);\n\t\tnewComment.userId = req.decoded.currentUser._id;\n\n\t\tnewComment.save().then((comment) => {\n\t\t\tres.status(201).send({\n\t\t\t\tcomment,\n\t\t\t\tmessage: 'Comment added successfully'\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n   * @description - Edits a comment\n   * \n   * @param {Object} req - request\n   * \n   * @param {Object} res - response\n   */\n\teditComment(req, res) {\n\t\tComment.findOneAndUpdate({ _id: req.body.commentId }, { $set: req.body })\n\t\t\t.then((updatedComment) => {\n\t\t\t\treturn res.status(200).send({\n\t\t\t\t\tupdatedComment,\n\t\t\t\t\tmessage: 'Comment updated successfully'\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\treturn res.status(500).send({\n\t\t\t\t\tmessage: 'error occured, comment ID is invalid'\n\t\t\t\t});\n\t\t\t});\n\t},\n\n\t/**\n   * @description - Deletes a comment\n   * \n   * @param {Object} req - request\n   * \n   * @param {Object} res - response\n   */\n\tdeleteComment(req, res) {\n\t\tComment.findOneAndRemove({ _id: req.body.commentId })\n\t\t\t.then((deletedComment) => {\n\t\t\t\treturn res.status(200).send({\n\t\t\t\t\t_id: deletedComment._id,\n\t\t\t\t\tmessage: 'Comment successfully deleted'\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\treturn res.status(500).send({\n\t\t\t\t\tmessage: 'Error occured, comment ID is invalid'\n\t\t\t\t});\n\t\t\t});\n\t}\n};\n\nexport default CommentControlller;\n"]}